  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }

  model Event {
    id          Int          @id @default(autoincrement())
    title       String
    description String       @db.Text
    date        DateTime
    images      EventImage[] // relation

    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt

    @@index([date])
  }

  model EventImage {
    id            Int      @id @default(autoincrement())
    event         Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

    eventId       Int
    encryptedName String   // S3 encrypted key
    priority      Int      @default(2) // 1 = featured, 2 = normal

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    @@index([priority])
  }

  model News {
    id          Int      @id @default(autoincrement())
    title       String
    details     String   @db.Text
    date        DateTime
    image       String   // encrypted filename

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@index([date])
  }

  model TeamMember {
    id          Int      @id @default(autoincrement())
    name        String
    designation String
    details     String?  @db.Text
    image       String?  // encrypted filename
    instagram   String?
    linkedin    String?
    facebook    String?
    discord     String?

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
  }

  model TimelineItem {
    id          Int      @id @default(autoincrement())
    date        DateTime
    highlights  String
    details     String   @db.Text
    image       String   // encrypted filename

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@index([date])
  }

  enum BlogCategory {
    TECH
    RESEARCH
    EVENTS
    NEWS
    OPINION
    OTHER
  }

  model Post {
    id          Int          @id @default(autoincrement())
    title       String
    slug        String       @unique
    category    BlogCategory @default(OTHER)
    description String       @db.Text
    image       String       // encrypted filename

    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt

    @@index([createdAt])
  }

  model GalleryImage {
    id                Int      @id @default(autoincrement())
    encryptedFileName String   @unique
    title             String?
    createdAt         DateTime @default(now())
  }
